까먹는 flex들

flex-direction: column
justify-content:flex-end

그냥 해당!! 자식을 가운데 정렬하고 싶은 놈이 있을때
display: inline-flex;
justify-content: center;

부모에 position: relative;
자식에 position: absolute;

.msgSec p.illust::before{
    content: url(../images/deco_left.png);
    position: absolute; left: 320px; bottom: -30px;
}
.msgSec p.illust::after{
    content: url(../images/deco_right.png);
    position: absolute; right: 320px; bottom: -30px;
}
.dateSec::after{
    content: ""; /*배경을 넣을 예정이라서 내용물은 없는 상태*/
    position: fixed; /* 스크롤이 움직여도 고정 */
    left: 0; top: 0; width: 100%; height: 100%; /*화면 가득 채우기 */
    background: url(../images/bg.jpg) no-repeat center/cover;
    z-index: -1; /* 기본 요소들보다 아래에 배치 */
}
/* 165p. 트랜지션 애니메이션 효과   */
input[type="submit"]:hover { /* 마우스 올렸을때*/
    background-color: #c7887f;
    margin-left: 20px; 
    transition-property: background-color,margin-left; /* 또는 all */
    transition-duration: 300ms; /* 0.3초 */
    transition-timing-function: ease-in; /*시작천천히 끝빨리*/
    transition-delay: 0ms; /* 지연  시간 없음 */
    transition: background-color,margin-left 300ms ease-in 0ms;
}
/* 167p. 키 프레임 설정   */
@keyframes scrollAnimation{ /* 1. @keyframes 사용할애니메이션명 */
    0%{ transform: scaleY(0);       transform-origin: top; }    /*  시작점 */
    50%{ transform: scaleY(1);      transform-origin: top;}     /* 가운데 이전 */
    50.1%{ transform: scaleY(1);    transform-origin: bottom; } /* 가운데 이후 */
    100%{ transform: scaleY(0);     transform-origin: bottom;}  /* 종료점 */
}
/* 169p. 키 프레임에 애니메이션 적용 */
header .scroll img{
    animation-name: scrollAnimation;
    animation-duration: 1.8s;
    animation-timing-function: ease-out;
    animation-iteration-count: infinite;
}